Unreal3.4-dev Release Notes
===========================

==[ GENERAL INFORMATION ]==
- If you are upgrading on *NIX, then make sure you run 'make clean' and
  './Config' first, before running 'make'.
- The official UnrealIRCd documentation is doc/unreal32docs.html
  online version at: http://www.vulnscan.org/UnrealIRCd/unreal32docs.html
  FAQ: http://www.vulnscan.org/UnrealIRCd/faq/
  Read them before asking for help.
- Report bugs at http://bugs.unrealircd.org/
- The purpose of the sections below (NEW, CHANGED, MINOR, etc) is to be a
  SUMMARY of the changes in this release.  There have been many changes in
  total, for the full list of changes see the Changelog.

==[ NEW ]==
- Entirely rewritten I/O and event loop.  This allows the IRCd to scale to
  tens of thousands of clients on a single process using kernel-evented I/O
  mechanisms such as epoll and kqueue.
- Full command modularity is now provided by default.  Each command is it's
  own module and all of them are loaded in the default config.  See modules.conf.
- The local nickname length can be modified without recompiling the IRCd, the
  compiled limit is displayed as MAXNICKLEN, per IRCv3 group discussions.
- Memory pooling has been added to improve memory allocation efficiency on
  'hot' codepaths.

==[ CHANGED ]==
- Numerics have been removed.  You will need to remove the numeric setting
  from me {} in unrealircd.conf.  Instead, proper SID and UIDs are implemented.
  See me::sid.

==[ MAJOR BUGS FIXED ]==
- None?

==[ MINOR BUGS FIXED ]==
- None?

==[ REMOVED / DROPPED ]==
- Numeric server IDs, see above.
- PROTOCTL TOKEN and SJB64 are no longer implemented.
- Ziplinks -- use the built-in compression of TLS/SSL instead.

==[ KNOWN ISSUES ]==
- Regexes: Be careful with backreferences (\1, etc), certain regexes can
  slow the IRCd down considerably and even bring it to a near-halt.
  In the spamfilter user target it's usually safe though.
  Slow spamfilter detection can help prevent the slowdown/freeze, but
  might not work in worst-case scenario's.
- Regexes: Possessive quantifiers such as, for example, "++" (not to be
  confused with "+") are not safe to use, they can easily freeze the IRCd.

==[ ADDITIONAL INFO ]==
* See Changelog for more details
